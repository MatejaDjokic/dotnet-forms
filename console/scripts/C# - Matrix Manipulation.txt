using System;

public class MatrixManipulation
{
    static void Main(string[] args)
    {
        Console.WriteLine("Unesite dimenziju matrice:");
        int a;

        while(!int.TryParse(Console.ReadLine(), out a))
            Console.WriteLine("Uneta vrednost nije pravilnog tipa. Molim vas pokusajte ponovo.");
        Console.WriteLine();

        string[,] matrica = NasumicnaMatrica(a, a);

        Console.Write("Nasumicna matrica:\n");
        IspisiMatricu(matrica, a, a);
        Console.WriteLine();

        SortirajMatricu(ref matrica, a, a);
        
        Console.Write("Sortirana matrica:\n");
        IspisiMatricu(matrica, a, a);
        Console.WriteLine();

        OznaciPonavljanja(ref matrica, a, a);

        Console.Write("Sortirana matrica bez ponavljanja:\n");
        IspisiMatricu(matrica, a, a);
        Console.WriteLine();
    }

    static void OznaciPonavljanja(ref string[,] matrica, int a,int b)
    {
        List<string> uMatrici = new List<string>();
        for (int i = 0; i < a; i++)
        {
            for (int j = 0; j < b; j++)
            {
                if (uMatrici.Contains(matrica[i, j]))
                {
                    matrica[i, j] = "*";
                }
                else
                {
                    uMatrici.Add(matrica[i, j]);
                }
            }
        }
    }

    static void SortirajMatricu(ref string[,] matrica_2d, int a, int b)
    {
        string[] matrica_1d = Matrix2DTo1D(matrica_2d, a, b);
        Array.ConvertAll(matrica_1d, int.Parse);
        Array.Sort(matrica_1d);
        matrica_2d = Matrix1DTo2D(matrica_1d, a, b);
    }

    static string[] Matrix2DTo1D(string[,] matrica_2d, int a, int b)
    {
        string[] matrica_1D = new string[a*b];

        for (int i = 0; i < a; i++)
        {
            for (int j = 0; j < b; j++)
            {
                matrica_1D[i * a + j] = matrica_2d[i, j];
            }
        }

        return matrica_1D;
    } 
    static string[,] Matrix1DTo2D(string[] matrica_1D, int a, int b)
    {
        string[,] matrica_2d = new string[a, b];

        for (int i = 0; i < a; i++)
        {
            for (int j = 0; j < b; j++)
            {
                matrica_2d[i, j] = matrica_1D[i * a + j];
            }
        }

        return matrica_2d;
    } 

    static void IspisiMatricu(string[,] matrica, int a, int b) 
    { 
        for (int i = 0; i < a; i++)
        {
            for (int j = 0; j < b; j++)
            {
                Console.Write(matrica[i, j] + " ");
            }
            Console.WriteLine();
        }
    }

    static string[,] NasumicnaMatrica(int a, int b)
    {
        Random rnd = new Random();
        string[,] matrica = new string[a, b];
        for (int i = 0; i < a; i++)
        {
            for (int j = 0; j < b; j++)
            {
                matrica[i, j] = rnd.NextInt64(10).ToString();
            }
        }

        return matrica;
    }

    static int[,] UnesiMatricu(int a, int b)
    {
        int[,] matrica = new int[a, b];
        for (int i = 0; i < a; i++)
        {
            string[] str = Console.ReadLine().Split(' ');
            for (int j = 0; j < b; j++)
            {
                matrica[i, j] = int.Parse(str[j]);
            }
        }

        return matrica;
    }

}